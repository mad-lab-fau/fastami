[tool.poetry]
name = "fastami"
version = "0.1.0"
description = "A Monte Carlo approximation to the adjusted and standardized mutual information for faster clustering comparisons"
authors = ["FastAMI <kai.klede@fau.de>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8"

[tool.poetry.dev-dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | docs
    | build
    | dist
    | \.virtual_documents
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
skip_gitignore = true


[tool.poe.tasks]
_format_black = "black ."
_format_isort = "isort ."
format = { sequence = ["_format_black", "_format_isort"], help = "Format all files." }
lint = { cmd = "prospector", help = "Lint all files with Prospector." }
_check_black = "black . --check"
_check_isort = "isort . --check"
check = { sequence = ["_check_black", "_check_isort", "lint"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=fastami --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
version = { script = "_tasks:task_update_version()" }
