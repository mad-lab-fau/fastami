import pytest
from fastami import standardized_mutual_info_mc
from numpy.random import PCG64, Generator
import numpy as np


class TestFastsmi:
    def test_fastsmi(self):
        prng = Generator(PCG64(12345))

        labels_true = [
            1,
            2,
            3,
            4,
            1,
            2,
            3,
            1,
            2,
            1,
            5,
            5,
            5,
            5,
            7,
            7,
            1,
            2,
            3,
            8,
            8,
            3,
            2,
            5,
            6,
            1,
            2,
            3,
            5,
            8,
            3,
            10,
            9,
            9,
            9,
            4,
            3,
            3,
            2,
            1,
            10,
            11,
            12,
            13,
            11,
            10,
            9,
            2,
            3,
            4,
            7,
            7,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
        ]
        labels_pred = [
            1,
            1,
            1,
            1,
            1,
            2,
            3,
            4,
            2,
            1,
            6,
            5,
            5,
            5,
            7,
            7,
            1,
            2,
            3,
            8,
            8,
            3,
            2,
            5,
            6,
            1,
            2,
            3,
            5,
            8,
            3,
            10,
            9,
            9,
            9,
            4,
            3,
            3,
            2,
            1,
            10,
            11,
            12,
            13,
            11,
            10,
            9,
            2,
            3,
            4,
            7,
            7,
            11,
            11,
            12,
            12,
            13,
            13,
            14,
            14,
            15,
            15,
            16,
            16,
            17,
            17,
            18,
            18,
            19,
            19,
            20,
            20,
            21,
            21,
            22,
            22,
            23,
            23,
            24,
            24,
            25,
            25,
            26,
            26,
            27,
            27,
            28,
            28,
            29,
            29,
            30,
            30,
        ]
        exact_result = 25.6144

        good_approximation = []
        for precision in [0.5, 0.1]:
            for _ in range(100):
                smi, smi_err = standardized_mutual_info_mc(
                    labels_true, labels_pred, seed=prng, precision_goal=precision
                )
                print(smi, smi_err)
                assert (smi_err <= precision) or (smi_err <= precision * abs(exact_result))
                good_approximation.append(abs(smi - exact_result) <= smi_err)

            assert np.mean(good_approximation) > 0.68
